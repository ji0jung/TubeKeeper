AWSTemplateFormatVersion: '2010-09-09'
Description: 'AIDLC Unit1 Authentication - S3 Bucket for CloudFormation Templates'

Parameters:
  Environment:
    Type: String
    Default: staging
    Description: Environment name
  
  ProjectName:
    Type: String
    Default: aidlc-auth
    Description: Project name for resource naming

Resources:
  # S3 Bucket for CloudFormation Templates
  TemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-${Environment}-cf-templates-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
          - Id: DeleteIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: s3:ObjectCreated:*
            CloudWatchConfiguration:
              LogGroupName: !Ref TemplatesBucketLogGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-cf-templates'
        - Key: Purpose
          Value: CloudFormation Templates Storage

  # CloudWatch Log Group for S3 Bucket
  TemplatesBucketLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/s3/${ProjectName}-${Environment}-cf-templates'
      RetentionInDays: 30

  # Bucket Policy - Only allow CloudFormation service and current account
  TemplatesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TemplatesBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFormationAccess
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - s3:GetObject
            Resource: !Sub '${TemplatesBucket}/*'
            Condition:
              StringEquals:
                'aws:SourceAccount': !Ref AWS::AccountId
          - Sid: AllowAccountAccess
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Resource: 
              - !Sub '${TemplatesBucket}/*'
              - !Ref TemplatesBucket
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${TemplatesBucket}/*'
              - !Ref TemplatesBucket
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

Outputs:
  TemplatesBucketName:
    Description: S3 Bucket name for CloudFormation templates
    Value: !Ref TemplatesBucket
    Export:
      Name: !Sub '${ProjectName}-${Environment}-TemplatesBucketName'

  TemplatesBucketArn:
    Description: S3 Bucket ARN for CloudFormation templates
    Value: !GetAtt TemplatesBucket.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-TemplatesBucketArn'

  TemplatesBucketDomainName:
    Description: S3 Bucket domain name for CloudFormation templates
    Value: !GetAtt TemplatesBucket.DomainName
    Export:
      Name: !Sub '${ProjectName}-${Environment}-TemplatesBucketDomainName'
