version: '3.8'

services:
  # Unit2: 카테고리 관리
  unit2:
    build:
      context: ../unit2_category_management
      dockerfile: Dockerfile
    ports:
      - "8012:8000"  # 8012 = 80 + 1 + 2 (통합용 포트)
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aidlc_integration
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=integration_test_secret_key
      - UNIT3_BASE_URL=http://unit3:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - aidlc-integration
    volumes:
      - ../unit2_category_management/src:/app/src
    restart: unless-stopped

  # Unit3: 카드 생성 및 관리  
  unit3:
    build:
      context: ../unit3_card_creation/src
      dockerfile: Dockerfile
    ports:
      - "8013:8000"  # 8013 = 80 + 1 + 3 (통합용 포트)
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aidlc_integration
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=integration_test_secret_key
      - UNIT2_BASE_URL=http://unit2:8000
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}  # 로컬 환경변수에서 가져옴
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      localstack:
        condition: service_started
    networks:
      - aidlc-integration
    volumes:
      - ../unit3_card_creation/src:/app/src
    restart: unless-stopped

  # 공유 PostgreSQL (포트 5436 사용 - 기존과 충돌 없음)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=aidlc_integration
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5436:5432"
    volumes:
      - postgres_integration_data:/var/lib/postgresql/data
      - ./shared/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aidlc-integration
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aidlc_integration"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 공유 Redis (포트 6382 사용 - 기존과 충돌 없음)
  redis:
    image: redis:7-alpine
    ports:
      - "6382:6379"
    volumes:
      - redis_integration_data:/data
    networks:
      - aidlc-integration
    restart: unless-stopped
    command: redis-server --appendonly yes

  # LocalStack (Unit3용 AWS 서비스 모킹)
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4568:4566"  # 4568 = 기존 4567 + 1 (충돌 방지)
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - localstack_data:/tmp/localstack
    networks:
      - aidlc-integration
    restart: unless-stopped

  # API Gateway (통합 엔드포인트)
  gateway:
    image: nginx:alpine
    ports:
      - "8080:80"  # 통합 API 게이트웨이
    volumes:
      - ./shared/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - unit2
      - unit3
    networks:
      - aidlc-integration
    restart: unless-stopped

volumes:
  postgres_integration_data:
  redis_integration_data:
  localstack_data:

networks:
  aidlc-integration:
    driver: bridge
