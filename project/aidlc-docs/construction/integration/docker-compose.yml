version: '3.8'

services:
  # Unit2: 카테고리 관리
  unit2:
    build:
      context: ../unit2_category_management
      dockerfile: Dockerfile
    ports:
      - "8012:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/aidlc_integration
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=integration_test_secret_key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - aidlc-integration
    restart: unless-stopped

  # Unit3: 카드 생성 및 관리  
  unit3:
    build:
      context: ../unit3_card_creation/src
      dockerfile: Dockerfile
    ports:
      - "8013:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/aidlc_integration
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=integration_test_secret_key
      - JWT_ALGORITHM=HS256
      - AWS_REGION=us-east-1
      - S3_BUCKET_NAME=youtube-keeper-thumbnails-dev
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - LOG_LEVEL=INFO
      - ENVIRONMENT=integration
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      localstack:
        condition: service_started
    networks:
      - aidlc-integration
    restart: unless-stopped

  # 공유 PostgreSQL
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=aidlc_integration
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5436:5432"
    volumes:
      - postgres_integration_data:/var/lib/postgresql/data
    networks:
      - aidlc-integration
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aidlc_integration"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 공유 Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6382:6379"
    volumes:
      - redis_integration_data:/data
    networks:
      - aidlc-integration
    restart: unless-stopped

  # LocalStack (Unit3용 AWS 서비스 모킹)
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4568:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
    volumes:
      - localstack_data:/tmp/localstack
    networks:
      - aidlc-integration
    restart: unless-stopped

volumes:
  postgres_integration_data:
  redis_integration_data:
  localstack_data:

networks:
  aidlc-integration:
    driver: bridge
